{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthService = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst router_1 = require(\"@angular/router\");\n\nconst firebase = (0, tslib_1.__importStar)(require(\"firebase/app\"));\n\nconst auth_1 = require(\"@angular/fire/auth\");\n\nconst firestore_1 = require(\"@angular/fire/firestore\");\n\nconst operators_1 = require(\"rxjs/operators\");\n\nconst user_dbservice_1 = require(\"./user.dbservice\");\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst i0 = (0, tslib_1.__importStar)(require(\"@angular/core\"));\nconst i1 = (0, tslib_1.__importStar)(require(\"@angular/fire/auth\"));\nconst i2 = (0, tslib_1.__importStar)(require(\"@angular/fire/firestore\"));\nconst i3 = (0, tslib_1.__importStar)(require(\"@angular/router\"));\nconst i4 = (0, tslib_1.__importStar)(require(\"./user.dbservice\"));\n\nclass AuthService {\n  constructor(afAuth, afs, router, userDBService) {\n    this.afAuth = afAuth;\n    this.afs = afs;\n    this.router = router;\n    this.userDBService = userDBService; //// Get auth data, then get firestore user document || null\n\n    this.user$ = this.afAuth.authState.pipe((0, operators_1.switchMap)(user => {\n      if (user) {\n        return this.afs.collection('users', ref => ref.where('uid', '==', user.uid)).valueChanges().pipe((0, operators_1.map)(data => {\n          console.log('user record is');\n          console.log(data[0]);\n          return data[0];\n        })); // return this.afs.doc<User>(`users/${user.uid}`).valueChanges()\n      } else {\n        return (0, rxjs_1.of)(null);\n      }\n    }));\n  }\n\n  login(username, password) {\n    return this.afAuth.auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then(() => {\n      return this.afAuth.auth.signInWithEmailAndPassword(username, password).then(result => {\n        return true;\n      }).catch(error => {\n        return false;\n      });\n    });\n  }\n\n  signOut() {\n    return this.afAuth.auth.signOut();\n  }\n\n  getLoggedInUserName() {\n    console.log('current email is: ' + this.afAuth.auth.currentUser.email);\n\n    if (this.afAuth.auth.currentUser) {\n      return this.userDBService.getCurrentUser(this.afAuth.auth.currentUser.email);\n    } else {\n      return null;\n    }\n  }\n\n  getAuthToken() {\n    return firebase.auth().currentUser.getIdToken();\n  }\n\n}\n\nexports.AuthService = AuthService;\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.AngularFirestore), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.UserDBService));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac\n});","map":null,"metadata":{},"sourceType":"script"}