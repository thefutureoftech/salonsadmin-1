{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FinalComponent = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst angular_1 = require(\"@mobiscroll/angular\");\n\nconst cross_service_1 = require(\"../../services/cross.service\");\n\nconst store_service_1 = require(\"../../services/store.service\");\n\nconst user_service_1 = require(\"../../services/user.service\");\n\nconst store_dbservice_1 = require(\"../../services/store.dbservice\");\n\nconst user_dbservice_1 = require(\"../../services/user.dbservice\");\n\nconst router_1 = require(\"@angular/router\");\n\nconst auth_service_1 = require(\"../../services/auth.service\");\n\nconst ng_block_ui_1 = require(\"ng-block-ui\");\n\nconst branch_1 = require(\"../../model/branch\");\n\nconst store_1 = require(\"../../model/store\");\n\nconst i0 = (0, tslib_1.__importStar)(require(\"@angular/core\"));\nconst i1 = (0, tslib_1.__importStar)(require(\"../../services/cross.service\"));\nconst i2 = (0, tslib_1.__importStar)(require(\"../../services/store.service\"));\nconst i3 = (0, tslib_1.__importStar)(require(\"../../services/user.service\"));\nconst i4 = (0, tslib_1.__importStar)(require(\"../../services/store.dbservice\"));\nconst i5 = (0, tslib_1.__importStar)(require(\"../../services/user.dbservice\"));\nconst i6 = (0, tslib_1.__importStar)(require(\"../../services/auth.service\"));\nconst i7 = (0, tslib_1.__importStar)(require(\"@angular/router\"));\nconst i8 = (0, tslib_1.__importStar)(require(\"@angular/common\"));\nconst i9 = (0, tslib_1.__importStar)(require(\"@mobiscroll/angular\"));\nconst i10 = (0, tslib_1.__importStar)(require(\"@angular/forms\"));\n\nfunction FinalComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"mbsc-form\", 1)(2, \"form\");\n    i0.ɵɵelement(3, \"br\")(4, \"br\");\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function FinalComponent_div_0_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.clearData();\n    });\n    i0.ɵɵtext(7, \"Clear Data/Go Home\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r0.formSettings);\n  }\n}\n\nlet FinalComponent = /*#__PURE__*/(() => {\n  class FinalComponent {\n    constructor(crossService, storeService, userService, storeDBService, userDBService, authService, router, activeRoute) {\n      this.crossService = crossService;\n      this.storeService = storeService;\n      this.userService = userService;\n      this.storeDBService = storeDBService;\n      this.userDBService = userDBService;\n      this.authService = authService;\n      this.router = router;\n      this.activeRoute = activeRoute;\n      this.formSettings = {\n        theme: 'ios'\n      };\n      this.userCreated = false;\n    }\n\n    ngOnInit() {\n      if (this.activeRoute.snapshot.queryParams.storeId) {\n        this.storeId = this.activeRoute.snapshot.queryParams.storeId;\n      }\n\n      this.authService.getAuthToken().then(authToken => {\n        if (this.storeId) {\n          this.spinning = true;\n          this.blockUI.start('Processing...');\n          this.createBranch(authToken);\n        } else {\n          this.createOwner(authToken);\n        }\n      });\n    }\n\n    createOwner(token) {\n      this.spinning = true;\n      this.blockUI.start('Processing...');\n      this.owner = this.userService.getOwner();\n      this.userDBService.createUser(this.owner, token).then(response => {\n        console.log(response);\n\n        if (response && response['error'] && response['error'] !== 'The email address is already in use by another account.') {\n          this.spinning = false;\n          this.blockUI.stop();\n          angular_1.mobiscroll.alert({\n            title: 'Error',\n            message: response.error\n          });\n          return;\n        }\n\n        console.log(\"Response from creating user is \" + response.userId);\n        this.userDBService.updateProfile(this.owner, response.userId).then(docRef => {\n          docRef.get().then(docSnapshot => {\n            let owner2 = this.userService.getOwner();\n            owner2.user = docSnapshot.data().uid;\n            this.userService.setOwner(owner2); // this.storeDBService.getbusinessTypes(this.storeService.getStore().busTypeId)\n\n            this.userDBService.createOwnerStore(this.storeService.getStore(), docSnapshot.data().uid).then(docRef => {\n              docRef.get().then(docSnapshot2 => {\n                this.storeId = docSnapshot2.id;\n                this.storeDBService.saveLogo(this.storeService.getStore().logo, docSnapshot2.id, this.createBranch.bind(this, token)); // .then((docRef: DocumentReference) => {\n                //   docRef.get().then((docSnapshot2: DocumentSnapshot) => {\n                //     let branch = this.storeService.getBranch();\n                //     branch.id = docSnapshot2.id;\n                //     this.storeService.setBranch(branch);\n                //     this.userDBService.updateBranchAssignments(docSnapshot.data().uid, docSnapshot2.id);\n                //     this.spinning = false;\n                //     mobiscroll.toast({\n                //       message: 'User was created'\n                //     });\n                //     this.userCreated = true;\n                //   });\n                // });\n              }).catch(error => {});\n            }); // });\n          }).catch(error => {\n            console.log('Error from updating profile :' + error);\n          });\n        }, error => {\n          console.log(error);\n        });\n      });\n    }\n\n    createBranch(token) {\n      console.log('this.storeService.getBranch().storeLogoURL is ' + this.storeService.getBranch().storeLogoURL);\n      this.storeService.getBranch().address.countryId = this.storeService.getStore().countryId;\n      this.storeDBService.createStoreBranch(this.storeId, this.storeService.getBranch(), this.userService.getStaff(), this.crossService.getServiceData(), this.doneCallBack.bind(this), token);\n    }\n\n    doneCallBack() {\n      console.log(this.userService.isOwnerStaff());\n\n      if (this.userService.isOwnerStaff()) {\n        this.storeDBService.updateUserBranchRole('staff', this.userService.getOwner().email, this.storeService.getBranch().id, this.doneCallBack2.bind(this));\n      } else {\n        this.spinning = false;\n        this.blockUI.stop();\n      } // this.storeDBService.saveLocation(this.storeService.getBranch().id);\n\n    }\n\n    doneCallBack2() {\n      console.log('stopped loader');\n      this.spinning = false;\n      this.blockUI.stop();\n    }\n\n    clearData() {\n      this.storeService.setBranch(new branch_1.Branch());\n      this.storeService.setStore(new store_1.Store());\n      this.userService.setOwner(null);\n      this.router.navigate(['home']);\n    }\n\n  }\n\n  FinalComponent.ɵfac = function FinalComponent_Factory(t) {\n    return new (t || FinalComponent)(i0.ɵɵdirectiveInject(i1.CrossService), i0.ɵɵdirectiveInject(i2.StoreService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.StoreDBService), i0.ɵɵdirectiveInject(i5.UserDBService), i0.ɵɵdirectiveInject(i6.AuthService), i0.ɵɵdirectiveInject(i7.Router), i0.ɵɵdirectiveInject(i7.ActivatedRoute));\n  };\n\n  FinalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FinalComponent,\n    selectors: [[\"app-final\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"options\"], [1, \"mbsc-btn-group-justified\"], [\"type\", \"button\", 2, \"display\", \"block\", 3, \"click\"]],\n    template: function FinalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FinalComponent_div_0_Template, 8, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.spinning);\n      }\n    },\n    directives: [i8.NgIf, i9.MbscForm, i10.ɵNgNoValidate, i10.NgControlStatusGroup, i10.NgForm],\n    styles: [\".loader[_ngcontent-%COMP%]{position:fixed;display:block;z-index:1009;background-color:#42424200;opacity:.7;top:0;left:0;width:100%;height:100%;border:3px solid rgb(247,243,243)}\"]\n  });\n  return FinalComponent;\n})();\n(0, tslib_1.__decorate)([(0, ng_block_ui_1.BlockUI)(), (0, tslib_1.__metadata)(\"design:type\", Object)], FinalComponent.prototype, \"blockUI\", void 0);\nexports.FinalComponent = FinalComponent;","map":null,"metadata":{},"sourceType":"script"}