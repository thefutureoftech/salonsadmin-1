{"ast":null,"code":"/*! algoliasearch.umd.js | 4.8.4 | Â© Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self).algoliasearch = t();\n}(this, function () {\n  \"use strict\";\n\n  function e(e, t, r) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = r, e;\n  }\n\n  function t(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function r(r) {\n    for (var n = 1; n < arguments.length; n++) {\n      var a = null != arguments[n] ? arguments[n] : {};\n      n % 2 ? t(Object(a), !0).forEach(function (t) {\n        e(r, t, a[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(a)) : t(Object(a)).forEach(function (e) {\n        Object.defineProperty(r, e, Object.getOwnPropertyDescriptor(a, e));\n      });\n    }\n\n    return r;\n  }\n\n  function n(e, t) {\n    if (null == e) return {};\n\n    var r,\n        n,\n        a = function (e, t) {\n      if (null == e) return {};\n      var r,\n          n,\n          a = {},\n          o = Object.keys(e);\n\n      for (n = 0; n < o.length; n++) r = o[n], t.indexOf(r) >= 0 || (a[r] = e[r]);\n\n      return a;\n    }(e, t);\n\n    if (Object.getOwnPropertySymbols) {\n      var o = Object.getOwnPropertySymbols(e);\n\n      for (n = 0; n < o.length; n++) r = o[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (a[r] = e[r]);\n    }\n\n    return a;\n  }\n\n  function a(e, t) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, t) {\n      if (!(Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e))) return;\n      var r = [],\n          n = !0,\n          a = !1,\n          o = void 0;\n\n      try {\n        for (var u, i = e[Symbol.iterator](); !(n = (u = i.next()).done) && (r.push(u.value), !t || r.length !== t); n = !0);\n      } catch (e) {\n        a = !0, o = e;\n      } finally {\n        try {\n          n || null == i.return || i.return();\n        } finally {\n          if (a) throw o;\n        }\n      }\n\n      return r;\n    }(e, t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }();\n  }\n\n  function o(e) {\n    return function (e) {\n      if (Array.isArray(e)) {\n        for (var t = 0, r = new Array(e.length); t < e.length; t++) r[t] = e[t];\n\n        return r;\n      }\n    }(e) || function (e) {\n      if (Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e)) return Array.from(e);\n    }(e) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n    }();\n  }\n\n  function u(e) {\n    var t,\n        r = \"algoliasearch-client-js-\".concat(e.key),\n        n = function () {\n      return void 0 === t && (t = e.localStorage || window.localStorage), t;\n    },\n        o = function () {\n      return JSON.parse(n().getItem(r) || \"{}\");\n    };\n\n    return {\n      get: function (e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function () {\n            return Promise.resolve();\n          }\n        };\n        return Promise.resolve().then(function () {\n          var r = JSON.stringify(e),\n              n = o()[r];\n          return Promise.all([n || t(), void 0 !== n]);\n        }).then(function (e) {\n          var t = a(e, 2),\n              n = t[0],\n              o = t[1];\n          return Promise.all([n, o || r.miss(n)]);\n        }).then(function (e) {\n          return a(e, 1)[0];\n        });\n      },\n      set: function (e, t) {\n        return Promise.resolve().then(function () {\n          var a = o();\n          return a[JSON.stringify(e)] = t, n().setItem(r, JSON.stringify(a)), t;\n        });\n      },\n      delete: function (e) {\n        return Promise.resolve().then(function () {\n          var t = o();\n          delete t[JSON.stringify(e)], n().setItem(r, JSON.stringify(t));\n        });\n      },\n      clear: function () {\n        return Promise.resolve().then(function () {\n          n().removeItem(r);\n        });\n      }\n    };\n  }\n\n  function i(e) {\n    var t = o(e.caches),\n        r = t.shift();\n    return void 0 === r ? {\n      get: function (e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function () {\n            return Promise.resolve();\n          }\n        },\n            n = t();\n        return n.then(function (e) {\n          return Promise.all([e, r.miss(e)]);\n        }).then(function (e) {\n          return a(e, 1)[0];\n        });\n      },\n      set: function (e, t) {\n        return Promise.resolve(t);\n      },\n      delete: function (e) {\n        return Promise.resolve();\n      },\n      clear: function () {\n        return Promise.resolve();\n      }\n    } : {\n      get: function (e, n) {\n        var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function () {\n            return Promise.resolve();\n          }\n        };\n        return r.get(e, n, a).catch(function () {\n          return i({\n            caches: t\n          }).get(e, n, a);\n        });\n      },\n      set: function (e, n) {\n        return r.set(e, n).catch(function () {\n          return i({\n            caches: t\n          }).set(e, n);\n        });\n      },\n      delete: function (e) {\n        return r.delete(e).catch(function () {\n          return i({\n            caches: t\n          }).delete(e);\n        });\n      },\n      clear: function () {\n        return r.clear().catch(function () {\n          return i({\n            caches: t\n          }).clear();\n        });\n      }\n    };\n  }\n\n  function s() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {\n      serializable: !0\n    },\n        t = {};\n    return {\n      get: function (r, n) {\n        var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function () {\n            return Promise.resolve();\n          }\n        },\n            o = JSON.stringify(r);\n        if (o in t) return Promise.resolve(e.serializable ? JSON.parse(t[o]) : t[o]);\n\n        var u = n(),\n            i = a && a.miss || function () {\n          return Promise.resolve();\n        };\n\n        return u.then(function (e) {\n          return i(e);\n        }).then(function () {\n          return u;\n        });\n      },\n      set: function (r, n) {\n        return t[JSON.stringify(r)] = e.serializable ? JSON.stringify(n) : n, Promise.resolve(n);\n      },\n      delete: function (e) {\n        return delete t[JSON.stringify(e)], Promise.resolve();\n      },\n      clear: function () {\n        return t = {}, Promise.resolve();\n      }\n    };\n  }\n\n  function c(e, t, r) {\n    var n = {\n      \"x-algolia-api-key\": r,\n      \"x-algolia-application-id\": t\n    };\n    return {\n      headers: function () {\n        return e === m.WithinHeaders ? n : {};\n      },\n      queryParameters: function () {\n        return e === m.WithinQueryParameters ? n : {};\n      }\n    };\n  }\n\n  function f(e) {\n    var t = 0;\n    return e(function r() {\n      return t++, new Promise(function (n) {\n        setTimeout(function () {\n          n(e(r));\n        }, Math.min(100 * t, 1e3));\n      });\n    });\n  }\n\n  function d(e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function (e, t) {\n      return Promise.resolve();\n    };\n    return Object.assign(e, {\n      wait: function (r) {\n        return d(e.then(function (e) {\n          return Promise.all([t(e, r), e]);\n        }).then(function (e) {\n          return e[1];\n        }));\n      }\n    });\n  }\n\n  function l(e) {\n    for (var t = e.length - 1; t > 0; t--) {\n      var r = Math.floor(Math.random() * (t + 1)),\n          n = e[t];\n      e[t] = e[r], e[r] = n;\n    }\n\n    return e;\n  }\n\n  function p(e, t) {\n    return t ? (Object.keys(t).forEach(function (r) {\n      e[r] = t[r](e);\n    }), e) : e;\n  }\n\n  function h(e) {\n    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) r[n - 1] = arguments[n];\n\n    var a = 0;\n    return e.replace(/%s/g, function () {\n      return encodeURIComponent(r[a++]);\n    });\n  }\n\n  var m = {\n    WithinQueryParameters: 0,\n    WithinHeaders: 1\n  };\n\n  function y(e, t) {\n    var r = e || {},\n        n = r.data || {};\n    return Object.keys(r).forEach(function (e) {\n      -1 === [\"timeout\", \"headers\", \"queryParameters\", \"data\", \"cacheable\"].indexOf(e) && (n[e] = r[e]);\n    }), {\n      data: Object.entries(n).length > 0 ? n : void 0,\n      timeout: r.timeout || t,\n      headers: r.headers || {},\n      queryParameters: r.queryParameters || {},\n      cacheable: r.cacheable\n    };\n  }\n\n  var g = {\n    Read: 1,\n    Write: 2,\n    Any: 3\n  },\n      v = 1,\n      b = 2,\n      P = 3;\n\n  function O(e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : v;\n    return r(r({}, e), {}, {\n      status: t,\n      lastUpdate: Date.now()\n    });\n  }\n\n  function w(e) {\n    return \"string\" == typeof e ? {\n      protocol: \"https\",\n      url: e,\n      accept: g.Any\n    } : {\n      protocol: e.protocol || \"https\",\n      url: e.url,\n      accept: e.accept || g.Any\n    };\n  }\n\n  var j = \"DELETE\",\n      I = \"GET\",\n      x = \"POST\",\n      q = \"PUT\";\n\n  function D(e, t) {\n    return Promise.all(t.map(function (t) {\n      return e.get(t, function () {\n        return Promise.resolve(O(t));\n      });\n    })).then(function (e) {\n      var r = e.filter(function (e) {\n        return function (e) {\n          return e.status === v || Date.now() - e.lastUpdate > 12e4;\n        }(e);\n      }),\n          n = e.filter(function (e) {\n        return function (e) {\n          return e.status === P && Date.now() - e.lastUpdate <= 12e4;\n        }(e);\n      }),\n          a = [].concat(o(r), o(n));\n      return {\n        getTimeout: function (e, t) {\n          return (0 === n.length && 0 === e ? 1 : n.length + 3 + e) * t;\n        },\n        statelessHosts: a.length > 0 ? a.map(function (e) {\n          return w(e);\n        }) : t\n      };\n    });\n  }\n\n  function S(e, t, n, a) {\n    var u = [],\n        i = function (e, t) {\n      if (e.method === I || void 0 === e.data && void 0 === t.data) return;\n      var n = Array.isArray(e.data) ? e.data : r(r({}, e.data), t.data);\n      return JSON.stringify(n);\n    }(n, a),\n        s = function (e, t) {\n      var n = r(r({}, e.headers), t.headers),\n          a = {};\n      return Object.keys(n).forEach(function (e) {\n        var t = n[e];\n        a[e.toLowerCase()] = t;\n      }), a;\n    }(e, a),\n        c = n.method,\n        f = n.method !== I ? {} : r(r({}, n.data), a.data),\n        d = r(r(r({\n      \"x-algolia-agent\": e.userAgent.value\n    }, e.queryParameters), f), a.queryParameters),\n        l = 0,\n        p = function t(r, o) {\n      var f = r.pop();\n      if (void 0 === f) throw {\n        name: \"RetryError\",\n        message: \"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",\n        transporterStackTrace: A(u)\n      };\n\n      var p = {\n        data: i,\n        headers: s,\n        method: c,\n        url: N(f, n.path, d),\n        connectTimeout: o(l, e.timeouts.connect),\n        responseTimeout: o(l, a.timeout)\n      },\n          h = function (e) {\n        var t = {\n          request: p,\n          response: e,\n          host: f,\n          triesLeft: r.length\n        };\n        return u.push(t), t;\n      },\n          m = {\n        onSucess: function (e) {\n          return function (e) {\n            try {\n              return JSON.parse(e.content);\n            } catch (t) {\n              throw function (e, t) {\n                return {\n                  name: \"DeserializationError\",\n                  message: e,\n                  response: t\n                };\n              }(t.message, e);\n            }\n          }(e);\n        },\n        onRetry: function (n) {\n          var a = h(n);\n          return n.isTimedOut && l++, Promise.all([e.logger.info(\"Retryable failure\", E(a)), e.hostsCache.set(f, O(f, n.isTimedOut ? P : b))]).then(function () {\n            return t(r, o);\n          });\n        },\n        onFail: function (e) {\n          throw h(e), function (e, t) {\n            var r = e.content,\n                n = e.status,\n                a = r;\n\n            try {\n              a = JSON.parse(r).message;\n            } catch (e) {}\n\n            return function (e, t, r) {\n              return {\n                name: \"ApiError\",\n                message: e,\n                status: t,\n                transporterStackTrace: r\n              };\n            }(a, n, t);\n          }(e, A(u));\n        }\n      };\n\n      return e.requester.send(p).then(function (e) {\n        return function (e, t) {\n          return function (e) {\n            var t = e.status;\n            return e.isTimedOut || function (e) {\n              var t = e.isTimedOut,\n                  r = e.status;\n              return !t && 0 == ~~r;\n            }(e) || 2 != ~~(t / 100) && 4 != ~~(t / 100);\n          }(e) ? t.onRetry(e) : 2 == ~~(e.status / 100) ? t.onSucess(e) : t.onFail(e);\n        }(e, m);\n      });\n    };\n\n    return D(e.hostsCache, t).then(function (e) {\n      return p(o(e.statelessHosts).reverse(), e.getTimeout);\n    });\n  }\n\n  function k(e) {\n    var t = e.hostsCache,\n        r = e.logger,\n        n = e.requester,\n        o = e.requestsCache,\n        u = e.responsesCache,\n        i = e.timeouts,\n        s = e.userAgent,\n        c = e.hosts,\n        f = e.queryParameters,\n        d = {\n      hostsCache: t,\n      logger: r,\n      requester: n,\n      requestsCache: o,\n      responsesCache: u,\n      timeouts: i,\n      userAgent: s,\n      headers: e.headers,\n      queryParameters: f,\n      hosts: c.map(function (e) {\n        return w(e);\n      }),\n      read: function (e, t) {\n        var r = y(t, d.timeouts.read),\n            n = function () {\n          return S(d, d.hosts.filter(function (e) {\n            return 0 != (e.accept & g.Read);\n          }), e, r);\n        };\n\n        if (!0 !== (void 0 !== r.cacheable ? r.cacheable : e.cacheable)) return n();\n        var o = {\n          request: e,\n          mappedRequestOptions: r,\n          transporter: {\n            queryParameters: d.queryParameters,\n            headers: d.headers\n          }\n        };\n        return d.responsesCache.get(o, function () {\n          return d.requestsCache.get(o, function () {\n            return d.requestsCache.set(o, n()).then(function (e) {\n              return Promise.all([d.requestsCache.delete(o), e]);\n            }, function (e) {\n              return Promise.all([d.requestsCache.delete(o), Promise.reject(e)]);\n            }).then(function (e) {\n              var t = a(e, 2);\n              t[0];\n              return t[1];\n            });\n          });\n        }, {\n          miss: function (e) {\n            return d.responsesCache.set(o, e);\n          }\n        });\n      },\n      write: function (e, t) {\n        return S(d, d.hosts.filter(function (e) {\n          return 0 != (e.accept & g.Write);\n        }), e, y(t, d.timeouts.write));\n      }\n    };\n    return d;\n  }\n\n  function T(e) {\n    var t = {\n      value: \"Algolia for JavaScript (\".concat(e, \")\"),\n      add: function (e) {\n        var r = \"; \".concat(e.segment).concat(void 0 !== e.version ? \" (\".concat(e.version, \")\") : \"\");\n        return -1 === t.value.indexOf(r) && (t.value = \"\".concat(t.value).concat(r)), t;\n      }\n    };\n    return t;\n  }\n\n  function N(e, t, r) {\n    var n = R(r),\n        a = \"\".concat(e.protocol, \"://\").concat(e.url, \"/\").concat(\"/\" === t.charAt(0) ? t.substr(1) : t);\n    return n.length && (a += \"?\".concat(n)), a;\n  }\n\n  function R(e) {\n    return Object.keys(e).map(function (t) {\n      return h(\"%s=%s\", t, (r = e[t], \"[object Object]\" === Object.prototype.toString.call(r) || \"[object Array]\" === Object.prototype.toString.call(r) ? JSON.stringify(e[t]) : e[t]));\n      var r;\n    }).join(\"&\");\n  }\n\n  function A(e) {\n    return e.map(function (e) {\n      return E(e);\n    });\n  }\n\n  function E(e) {\n    var t = e.request.headers[\"x-algolia-api-key\"] ? {\n      \"x-algolia-api-key\": \"*****\"\n    } : {};\n    return r(r({}, e), {}, {\n      request: r(r({}, e.request), {}, {\n        headers: r(r({}, e.request.headers), t)\n      })\n    });\n  }\n\n  var C = function (e) {\n    return function (t, r) {\n      return e.transporter.write({\n        method: x,\n        path: \"2/abtests\",\n        data: t\n      }, r);\n    };\n  },\n      U = function (e) {\n    return function (t, r) {\n      return e.transporter.write({\n        method: j,\n        path: h(\"2/abtests/%s\", t)\n      }, r);\n    };\n  },\n      J = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: I,\n        path: h(\"2/abtests/%s\", t)\n      }, r);\n    };\n  },\n      z = function (e) {\n    return function (t) {\n      return e.transporter.read({\n        method: I,\n        path: \"2/abtests\"\n      }, t);\n    };\n  },\n      F = function (e) {\n    return function (t, r) {\n      return e.transporter.write({\n        method: x,\n        path: h(\"2/abtests/%s/stop\", t)\n      }, r);\n    };\n  },\n      H = function (e) {\n    return function (t) {\n      return e.transporter.read({\n        method: I,\n        path: \"1/strategies/personalization\"\n      }, t);\n    };\n  },\n      M = function (e) {\n    return function (t, r) {\n      return e.transporter.write({\n        method: x,\n        path: \"1/strategies/personalization\",\n        data: t\n      }, r);\n    };\n  };\n\n  function K(e) {\n    return function t(r) {\n      return e.request(r).then(function (n) {\n        if (void 0 !== e.batch && e.batch(n.hits), !e.shouldStop(n)) return n.cursor ? t({\n          cursor: n.cursor\n        }) : t({\n          page: (r.page || 0) + 1\n        });\n      });\n    }({});\n  }\n\n  var W = function (e) {\n    return function (t, a) {\n      var o = a || {},\n          u = o.queryParameters,\n          i = n(o, [\"queryParameters\"]),\n          s = r({\n        acl: t\n      }, void 0 !== u ? {\n        queryParameters: u\n      } : {});\n      return d(e.transporter.write({\n        method: x,\n        path: \"1/keys\",\n        data: s\n      }, i), function (t, r) {\n        return f(function (n) {\n          return Y(e)(t.key, r).catch(function (e) {\n            if (404 !== e.status) throw e;\n            return n();\n          });\n        });\n      });\n    };\n  },\n      B = function (e) {\n    return function (t, r, n) {\n      var a = y(n);\n      return a.queryParameters[\"X-Algolia-User-ID\"] = t, e.transporter.write({\n        method: x,\n        path: \"1/clusters/mapping\",\n        data: {\n          cluster: r\n        }\n      }, a);\n    };\n  },\n      Q = function (e) {\n    return function (t, r, n) {\n      return e.transporter.write({\n        method: x,\n        path: \"1/clusters/mapping/batch\",\n        data: {\n          users: t,\n          cluster: r\n        }\n      }, n);\n    };\n  },\n      G = function (e) {\n    return function (t, r, n) {\n      return d(e.transporter.write({\n        method: x,\n        path: h(\"1/indexes/%s/operation\", t),\n        data: {\n          operation: \"copy\",\n          destination: r\n        }\n      }, n), function (r, n) {\n        return re(e)(t, {\n          methods: {\n            waitTask: tt\n          }\n        }).waitTask(r.taskID, n);\n      });\n    };\n  },\n      L = function (e) {\n    return function (t, n, a) {\n      return G(e)(t, n, r(r({}, a), {}, {\n        scope: [nt.Rules]\n      }));\n    };\n  },\n      V = function (e) {\n    return function (t, n, a) {\n      return G(e)(t, n, r(r({}, a), {}, {\n        scope: [nt.Settings]\n      }));\n    };\n  },\n      _ = function (e) {\n    return function (t, n, a) {\n      return G(e)(t, n, r(r({}, a), {}, {\n        scope: [nt.Synonyms]\n      }));\n    };\n  },\n      X = function (e) {\n    return function (t, r) {\n      return d(e.transporter.write({\n        method: j,\n        path: h(\"1/keys/%s\", t)\n      }, r), function (r, n) {\n        return f(function (r) {\n          return Y(e)(t, n).then(r).catch(function (e) {\n            if (404 !== e.status) throw e;\n          });\n        });\n      });\n    };\n  },\n      Y = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: I,\n        path: h(\"1/keys/%s\", t)\n      }, r);\n    };\n  },\n      Z = function (e) {\n    return function (t) {\n      return e.transporter.read({\n        method: I,\n        path: \"1/logs\"\n      }, t);\n    };\n  },\n      $ = function (e) {\n    return function (t) {\n      return e.transporter.read({\n        method: I,\n        path: \"1/clusters/mapping/top\"\n      }, t);\n    };\n  },\n      ee = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: I,\n        path: h(\"1/clusters/mapping/%s\", t)\n      }, r);\n    };\n  },\n      te = function (e) {\n    return function (t) {\n      var r = t || {},\n          a = r.retrieveMappings,\n          o = n(r, [\"retrieveMappings\"]);\n      return !0 === a && (o.getClusters = !0), e.transporter.read({\n        method: I,\n        path: \"1/clusters/mapping/pending\"\n      }, o);\n    };\n  },\n      re = function (e) {\n    return function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          n = {\n        transporter: e.transporter,\n        appId: e.appId,\n        indexName: t\n      };\n      return p(n, r.methods);\n    };\n  },\n      ne = function (e) {\n    return function (t) {\n      return e.transporter.read({\n        method: I,\n        path: \"1/keys\"\n      }, t);\n    };\n  },\n      ae = function (e) {\n    return function (t) {\n      return e.transporter.read({\n        method: I,\n        path: \"1/clusters\"\n      }, t);\n    };\n  },\n      oe = function (e) {\n    return function (t) {\n      return e.transporter.read({\n        method: I,\n        path: \"1/indexes\"\n      }, t);\n    };\n  },\n      ue = function (e) {\n    return function (t) {\n      return e.transporter.read({\n        method: I,\n        path: \"1/clusters/mapping\"\n      }, t);\n    };\n  },\n      ie = function (e) {\n    return function (t, r, n) {\n      return d(e.transporter.write({\n        method: x,\n        path: h(\"1/indexes/%s/operation\", t),\n        data: {\n          operation: \"move\",\n          destination: r\n        }\n      }, n), function (r, n) {\n        return re(e)(t, {\n          methods: {\n            waitTask: tt\n          }\n        }).waitTask(r.taskID, n);\n      });\n    };\n  },\n      se = function (e) {\n    return function (t, r) {\n      return d(e.transporter.write({\n        method: x,\n        path: \"1/indexes/*/batch\",\n        data: {\n          requests: t\n        }\n      }, r), function (t, r) {\n        return Promise.all(Object.keys(t.taskID).map(function (n) {\n          return re(e)(n, {\n            methods: {\n              waitTask: tt\n            }\n          }).waitTask(t.taskID[n], r);\n        }));\n      });\n    };\n  },\n      ce = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: x,\n        path: \"1/indexes/*/objects\",\n        data: {\n          requests: t\n        }\n      }, r);\n    };\n  },\n      fe = function (e) {\n    return function (t, n) {\n      var a = t.map(function (e) {\n        return r(r({}, e), {}, {\n          params: R(e.params || {})\n        });\n      });\n      return e.transporter.read({\n        method: x,\n        path: \"1/indexes/*/queries\",\n        data: {\n          requests: a\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      de = function (e) {\n    return function (t, a) {\n      return Promise.all(t.map(function (t) {\n        var o = t.params,\n            u = o.facetName,\n            i = o.facetQuery,\n            s = n(o, [\"facetName\", \"facetQuery\"]);\n        return re(e)(t.indexName, {\n          methods: {\n            searchForFacetValues: Ye\n          }\n        }).searchForFacetValues(u, i, r(r({}, a), s));\n      }));\n    };\n  },\n      le = function (e) {\n    return function (t, r) {\n      var n = y(r);\n      return n.queryParameters[\"X-Algolia-User-ID\"] = t, e.transporter.write({\n        method: j,\n        path: \"1/clusters/mapping\"\n      }, n);\n    };\n  },\n      pe = function (e) {\n    return function (t, r) {\n      return d(e.transporter.write({\n        method: x,\n        path: h(\"1/keys/%s/restore\", t)\n      }, r), function (r, n) {\n        return f(function (r) {\n          return Y(e)(t, n).catch(function (e) {\n            if (404 !== e.status) throw e;\n            return r();\n          });\n        });\n      });\n    };\n  },\n      he = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: x,\n        path: \"1/clusters/mapping/search\",\n        data: {\n          query: t\n        }\n      }, r);\n    };\n  },\n      me = function (e) {\n    return function (t, r) {\n      var a = Object.assign({}, r),\n          o = r || {},\n          u = o.queryParameters,\n          i = n(o, [\"queryParameters\"]),\n          s = u ? {\n        queryParameters: u\n      } : {},\n          c = [\"acl\", \"indexes\", \"referers\", \"restrictSources\", \"queryParameters\", \"description\", \"maxQueriesPerIPPerHour\", \"maxHitsPerQuery\"];\n      return d(e.transporter.write({\n        method: q,\n        path: h(\"1/keys/%s\", t),\n        data: s\n      }, i), function (r, n) {\n        return f(function (r) {\n          return Y(e)(t, n).then(function (e) {\n            return function (e) {\n              return Object.keys(a).filter(function (e) {\n                return -1 !== c.indexOf(e);\n              }).every(function (t) {\n                return e[t] === a[t];\n              });\n            }(e) ? Promise.resolve() : r();\n          });\n        });\n      });\n    };\n  },\n      ye = function (e) {\n    return function (t, r) {\n      return d(e.transporter.write({\n        method: x,\n        path: h(\"1/indexes/%s/batch\", e.indexName),\n        data: {\n          requests: t\n        }\n      }, r), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      ge = function (e) {\n    return function (t) {\n      return K(r(r({\n        shouldStop: function (e) {\n          return void 0 === e.cursor;\n        }\n      }, t), {}, {\n        request: function (r) {\n          return e.transporter.read({\n            method: x,\n            path: h(\"1/indexes/%s/browse\", e.indexName),\n            data: r\n          }, t);\n        }\n      }));\n    };\n  },\n      ve = function (e) {\n    return function (t) {\n      var n = r({\n        hitsPerPage: 1e3\n      }, t);\n      return K(r(r({\n        shouldStop: function (e) {\n          return e.hits.length < n.hitsPerPage;\n        }\n      }, n), {}, {\n        request: function (t) {\n          return Ze(e)(\"\", r(r({}, n), t)).then(function (e) {\n            return r(r({}, e), {}, {\n              hits: e.hits.map(function (e) {\n                return delete e._highlightResult, e;\n              })\n            });\n          });\n        }\n      }));\n    };\n  },\n      be = function (e) {\n    return function (t) {\n      var n = r({\n        hitsPerPage: 1e3\n      }, t);\n      return K(r(r({\n        shouldStop: function (e) {\n          return e.hits.length < n.hitsPerPage;\n        }\n      }, n), {}, {\n        request: function (t) {\n          return $e(e)(\"\", r(r({}, n), t)).then(function (e) {\n            return r(r({}, e), {}, {\n              hits: e.hits.map(function (e) {\n                return delete e._highlightResult, e;\n              })\n            });\n          });\n        }\n      }));\n    };\n  },\n      Pe = function (e) {\n    return function (t, r, a) {\n      var o = a || {},\n          u = o.batchSize,\n          i = n(o, [\"batchSize\"]),\n          s = {\n        taskIDs: [],\n        objectIDs: []\n      };\n      return d(function n() {\n        var a,\n            o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            c = [];\n\n        for (a = o; a < t.length && (c.push(t[a]), c.length !== (u || 1e3)); a++);\n\n        return 0 === c.length ? Promise.resolve(s) : ye(e)(c.map(function (e) {\n          return {\n            action: r,\n            body: e\n          };\n        }), i).then(function (e) {\n          return s.objectIDs = s.objectIDs.concat(e.objectIDs), s.taskIDs.push(e.taskID), a++, n(a);\n        });\n      }(), function (t, r) {\n        return Promise.all(t.taskIDs.map(function (t) {\n          return tt(e)(t, r);\n        }));\n      });\n    };\n  },\n      Oe = function (e) {\n    return function (t) {\n      return d(e.transporter.write({\n        method: x,\n        path: h(\"1/indexes/%s/clear\", e.indexName)\n      }, t), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      we = function (e) {\n    return function (t) {\n      var r = t || {},\n          a = r.forwardToReplicas,\n          o = y(n(r, [\"forwardToReplicas\"]));\n      return a && (o.queryParameters.forwardToReplicas = 1), d(e.transporter.write({\n        method: x,\n        path: h(\"1/indexes/%s/rules/clear\", e.indexName)\n      }, o), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      je = function (e) {\n    return function (t) {\n      var r = t || {},\n          a = r.forwardToReplicas,\n          o = y(n(r, [\"forwardToReplicas\"]));\n      return a && (o.queryParameters.forwardToReplicas = 1), d(e.transporter.write({\n        method: x,\n        path: h(\"1/indexes/%s/synonyms/clear\", e.indexName)\n      }, o), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      Ie = function (e) {\n    return function (t, r) {\n      return d(e.transporter.write({\n        method: x,\n        path: h(\"1/indexes/%s/deleteByQuery\", e.indexName),\n        data: t\n      }, r), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      xe = function (e) {\n    return function (t) {\n      return d(e.transporter.write({\n        method: j,\n        path: h(\"1/indexes/%s\", e.indexName)\n      }, t), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      qe = function (e) {\n    return function (t, r) {\n      return d(De(e)([t], r).then(function (e) {\n        return {\n          taskID: e.taskIDs[0]\n        };\n      }), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      De = function (e) {\n    return function (t, r) {\n      var n = t.map(function (e) {\n        return {\n          objectID: e\n        };\n      });\n      return Pe(e)(n, rt.DeleteObject, r);\n    };\n  },\n      Se = function (e) {\n    return function (t, r) {\n      var a = r || {},\n          o = a.forwardToReplicas,\n          u = y(n(a, [\"forwardToReplicas\"]));\n      return o && (u.queryParameters.forwardToReplicas = 1), d(e.transporter.write({\n        method: j,\n        path: h(\"1/indexes/%s/rules/%s\", e.indexName, t)\n      }, u), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      ke = function (e) {\n    return function (t, r) {\n      var a = r || {},\n          o = a.forwardToReplicas,\n          u = y(n(a, [\"forwardToReplicas\"]));\n      return o && (u.queryParameters.forwardToReplicas = 1), d(e.transporter.write({\n        method: j,\n        path: h(\"1/indexes/%s/synonyms/%s\", e.indexName, t)\n      }, u), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      Te = function (e) {\n    return function (t) {\n      return Je(e)(t).then(function () {\n        return !0;\n      }).catch(function (e) {\n        if (404 !== e.status) throw e;\n        return !1;\n      });\n    };\n  },\n      Ne = function (e) {\n    return function (t, r, n) {\n      return e.transporter.read({\n        method: x,\n        path: h(\"1/answers/%s/prediction\", e.indexName),\n        data: {\n          query: t,\n          queryLanguages: r\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      Re = function (e) {\n    return function (t, o) {\n      var u = o || {},\n          i = u.query,\n          s = u.paginate,\n          c = n(u, [\"query\", \"paginate\"]),\n          f = 0;\n      return function n() {\n        return Xe(e)(i || \"\", r(r({}, c), {}, {\n          page: f\n        })).then(function (e) {\n          for (var r = 0, o = Object.entries(e.hits); r < o.length; r++) {\n            var u = a(o[r], 2),\n                i = u[0],\n                c = u[1];\n            if (t(c)) return {\n              object: c,\n              position: parseInt(i, 10),\n              page: f\n            };\n          }\n\n          if (f++, !1 === s || f >= e.nbPages) throw {\n            name: \"ObjectNotFoundError\",\n            message: \"Object not found.\"\n          };\n          return n();\n        });\n      }();\n    };\n  },\n      Ae = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: I,\n        path: h(\"1/indexes/%s/%s\", e.indexName, t)\n      }, r);\n    };\n  },\n      Ee = function () {\n    return function (e, t) {\n      for (var r = 0, n = Object.entries(e.hits); r < n.length; r++) {\n        var o = a(n[r], 2),\n            u = o[0];\n        if (o[1].objectID === t) return parseInt(u, 10);\n      }\n\n      return -1;\n    };\n  },\n      Ce = function (e) {\n    return function (t, a) {\n      var o = a || {},\n          u = o.attributesToRetrieve,\n          i = n(o, [\"attributesToRetrieve\"]),\n          s = t.map(function (t) {\n        return r({\n          indexName: e.indexName,\n          objectID: t\n        }, u ? {\n          attributesToRetrieve: u\n        } : {});\n      });\n      return e.transporter.read({\n        method: x,\n        path: \"1/indexes/*/objects\",\n        data: {\n          requests: s\n        }\n      }, i);\n    };\n  },\n      Ue = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: I,\n        path: h(\"1/indexes/%s/rules/%s\", e.indexName, t)\n      }, r);\n    };\n  },\n      Je = function (e) {\n    return function (t) {\n      return e.transporter.read({\n        method: I,\n        path: h(\"1/indexes/%s/settings\", e.indexName),\n        data: {\n          getVersion: 2\n        }\n      }, t);\n    };\n  },\n      ze = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: I,\n        path: h(\"1/indexes/%s/synonyms/%s\", e.indexName, t)\n      }, r);\n    };\n  },\n      Fe = function (e) {\n    return function (t, r) {\n      return d(He(e)([t], r).then(function (e) {\n        return {\n          objectID: e.objectIDs[0],\n          taskID: e.taskIDs[0]\n        };\n      }), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      He = function (e) {\n    return function (t, r) {\n      var a = r || {},\n          o = a.createIfNotExists,\n          u = n(a, [\"createIfNotExists\"]),\n          i = o ? rt.PartialUpdateObject : rt.PartialUpdateObjectNoCreate;\n      return Pe(e)(t, i, u);\n    };\n  },\n      Me = function (e) {\n    return function (t, u) {\n      var i = u || {},\n          s = i.safe,\n          c = i.autoGenerateObjectIDIfNotExist,\n          f = i.batchSize,\n          l = n(i, [\"safe\", \"autoGenerateObjectIDIfNotExist\", \"batchSize\"]),\n          p = function (t, r, n, a) {\n        return d(e.transporter.write({\n          method: x,\n          path: h(\"1/indexes/%s/operation\", t),\n          data: {\n            operation: n,\n            destination: r\n          }\n        }, a), function (t, r) {\n          return tt(e)(t.taskID, r);\n        });\n      },\n          m = Math.random().toString(36).substring(7),\n          y = \"\".concat(e.indexName, \"_tmp_\").concat(m),\n          g = Qe({\n        appId: e.appId,\n        transporter: e.transporter,\n        indexName: y\n      }),\n          v = [],\n          b = p(e.indexName, y, \"copy\", r(r({}, l), {}, {\n        scope: [\"settings\", \"synonyms\", \"rules\"]\n      }));\n\n      return v.push(b), d((s ? b.wait(l) : b).then(function () {\n        var e = g(t, r(r({}, l), {}, {\n          autoGenerateObjectIDIfNotExist: c,\n          batchSize: f\n        }));\n        return v.push(e), s ? e.wait(l) : e;\n      }).then(function () {\n        var t = p(y, e.indexName, \"move\", l);\n        return v.push(t), s ? t.wait(l) : t;\n      }).then(function () {\n        return Promise.all(v);\n      }).then(function (e) {\n        var t = a(e, 3),\n            r = t[0],\n            n = t[1],\n            u = t[2];\n        return {\n          objectIDs: n.objectIDs,\n          taskIDs: [r.taskID].concat(o(n.taskIDs), [u.taskID])\n        };\n      }), function (e, t) {\n        return Promise.all(v.map(function (e) {\n          return e.wait(t);\n        }));\n      });\n    };\n  },\n      Ke = function (e) {\n    return function (t, n) {\n      return Le(e)(t, r(r({}, n), {}, {\n        clearExistingRules: !0\n      }));\n    };\n  },\n      We = function (e) {\n    return function (t, n) {\n      return _e(e)(t, r(r({}, n), {}, {\n        clearExistingSynonyms: !0\n      }));\n    };\n  },\n      Be = function (e) {\n    return function (t, r) {\n      return d(Qe(e)([t], r).then(function (e) {\n        return {\n          objectID: e.objectIDs[0],\n          taskID: e.taskIDs[0]\n        };\n      }), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      Qe = function (e) {\n    return function (t, r) {\n      var a = r || {},\n          o = a.autoGenerateObjectIDIfNotExist,\n          u = n(a, [\"autoGenerateObjectIDIfNotExist\"]),\n          i = o ? rt.AddObject : rt.UpdateObject;\n\n      if (i === rt.UpdateObject) {\n        var s = !0,\n            c = !1,\n            f = void 0;\n\n        try {\n          for (var l, p = t[Symbol.iterator](); !(s = (l = p.next()).done); s = !0) {\n            if (void 0 === l.value.objectID) return d(Promise.reject({\n              name: \"MissingObjectIDError\",\n              message: \"All objects must have an unique objectID (like a primary key) to be valid. Algolia is also able to generate objectIDs automatically but *it's not recommended*. To do it, use the `{'autoGenerateObjectIDIfNotExist': true}` option.\"\n            }));\n          }\n        } catch (e) {\n          c = !0, f = e;\n        } finally {\n          try {\n            s || null == p.return || p.return();\n          } finally {\n            if (c) throw f;\n          }\n        }\n      }\n\n      return Pe(e)(t, i, u);\n    };\n  },\n      Ge = function (e) {\n    return function (t, r) {\n      return Le(e)([t], r);\n    };\n  },\n      Le = function (e) {\n    return function (t, r) {\n      var a = r || {},\n          o = a.forwardToReplicas,\n          u = a.clearExistingRules,\n          i = y(n(a, [\"forwardToReplicas\", \"clearExistingRules\"]));\n      return o && (i.queryParameters.forwardToReplicas = 1), u && (i.queryParameters.clearExistingRules = 1), d(e.transporter.write({\n        method: x,\n        path: h(\"1/indexes/%s/rules/batch\", e.indexName),\n        data: t\n      }, i), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      Ve = function (e) {\n    return function (t, r) {\n      return _e(e)([t], r);\n    };\n  },\n      _e = function (e) {\n    return function (t, r) {\n      var a = r || {},\n          o = a.forwardToReplicas,\n          u = a.clearExistingSynonyms,\n          i = a.replaceExistingSynonyms,\n          s = y(n(a, [\"forwardToReplicas\", \"clearExistingSynonyms\", \"replaceExistingSynonyms\"]));\n      return o && (s.queryParameters.forwardToReplicas = 1), (i || u) && (s.queryParameters.replaceExistingSynonyms = 1), d(e.transporter.write({\n        method: x,\n        path: h(\"1/indexes/%s/synonyms/batch\", e.indexName),\n        data: t\n      }, s), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      Xe = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: x,\n        path: h(\"1/indexes/%s/query\", e.indexName),\n        data: {\n          query: t\n        },\n        cacheable: !0\n      }, r);\n    };\n  },\n      Ye = function (e) {\n    return function (t, r, n) {\n      return e.transporter.read({\n        method: x,\n        path: h(\"1/indexes/%s/facets/%s/query\", e.indexName, t),\n        data: {\n          facetQuery: r\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      Ze = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: x,\n        path: h(\"1/indexes/%s/rules/search\", e.indexName),\n        data: {\n          query: t\n        }\n      }, r);\n    };\n  },\n      $e = function (e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: x,\n        path: h(\"1/indexes/%s/synonyms/search\", e.indexName),\n        data: {\n          query: t\n        }\n      }, r);\n    };\n  },\n      et = function (e) {\n    return function (t, r) {\n      var a = r || {},\n          o = a.forwardToReplicas,\n          u = y(n(a, [\"forwardToReplicas\"]));\n      return o && (u.queryParameters.forwardToReplicas = 1), d(e.transporter.write({\n        method: q,\n        path: h(\"1/indexes/%s/settings\", e.indexName),\n        data: t\n      }, u), function (t, r) {\n        return tt(e)(t.taskID, r);\n      });\n    };\n  },\n      tt = function (e) {\n    return function (t, r) {\n      return f(function (n) {\n        return function (e) {\n          return function (t, r) {\n            return e.transporter.read({\n              method: I,\n              path: h(\"1/indexes/%s/task/%s\", e.indexName, t.toString())\n            }, r);\n          };\n        }(e)(t, r).then(function (e) {\n          return \"published\" !== e.status ? n() : void 0;\n        });\n      });\n    };\n  },\n      rt = {\n    AddObject: \"addObject\",\n    UpdateObject: \"updateObject\",\n    PartialUpdateObject: \"partialUpdateObject\",\n    PartialUpdateObjectNoCreate: \"partialUpdateObjectNoCreate\",\n    DeleteObject: \"deleteObject\",\n    DeleteIndex: \"delete\",\n    ClearIndex: \"clear\"\n  },\n      nt = {\n    Settings: \"settings\",\n    Synonyms: \"synonyms\",\n    Rules: \"rules\"\n  },\n      at = 1,\n      ot = 2,\n      ut = 3;\n\n  function it(e, t, n) {\n    var a,\n        o = {\n      appId: e,\n      apiKey: t,\n      timeouts: {\n        connect: 1,\n        read: 2,\n        write: 30\n      },\n      requester: {\n        send: function (e) {\n          return new Promise(function (t) {\n            var r = new XMLHttpRequest();\n            r.open(e.method, e.url, !0), Object.keys(e.headers).forEach(function (t) {\n              return r.setRequestHeader(t, e.headers[t]);\n            });\n\n            var n,\n                a = function (e, n) {\n              return setTimeout(function () {\n                r.abort(), t({\n                  status: 0,\n                  content: n,\n                  isTimedOut: !0\n                });\n              }, 1e3 * e);\n            },\n                o = a(e.connectTimeout, \"Connection timeout\");\n\n            r.onreadystatechange = function () {\n              r.readyState > r.OPENED && void 0 === n && (clearTimeout(o), n = a(e.responseTimeout, \"Socket timeout\"));\n            }, r.onerror = function () {\n              0 === r.status && (clearTimeout(o), clearTimeout(n), t({\n                content: r.responseText || \"Network request failed\",\n                status: r.status,\n                isTimedOut: !1\n              }));\n            }, r.onload = function () {\n              clearTimeout(o), clearTimeout(n), t({\n                content: r.responseText,\n                status: r.status,\n                isTimedOut: !1\n              });\n            }, r.send(e.data);\n          });\n        }\n      },\n      logger: (a = ut, {\n        debug: function (e, t) {\n          return at >= a && console.debug(e, t), Promise.resolve();\n        },\n        info: function (e, t) {\n          return ot >= a && console.info(e, t), Promise.resolve();\n        },\n        error: function (e, t) {\n          return console.error(e, t), Promise.resolve();\n        }\n      }),\n      responsesCache: s(),\n      requestsCache: s({\n        serializable: !1\n      }),\n      hostsCache: i({\n        caches: [u({\n          key: \"\".concat(\"4.8.4\", \"-\").concat(e)\n        }), s()]\n      }),\n      userAgent: T(\"4.8.4\").add({\n        segment: \"Browser\"\n      })\n    };\n    return function (e) {\n      var t = e.appId,\n          n = c(void 0 !== e.authMode ? e.authMode : m.WithinHeaders, t, e.apiKey),\n          a = k(r(r({\n        hosts: [{\n          url: \"\".concat(t, \"-dsn.algolia.net\"),\n          accept: g.Read\n        }, {\n          url: \"\".concat(t, \".algolia.net\"),\n          accept: g.Write\n        }].concat(l([{\n          url: \"\".concat(t, \"-1.algolianet.com\")\n        }, {\n          url: \"\".concat(t, \"-2.algolianet.com\")\n        }, {\n          url: \"\".concat(t, \"-3.algolianet.com\")\n        }]))\n      }, e), {}, {\n        headers: r(r(r({}, n.headers()), {\n          \"content-type\": \"application/x-www-form-urlencoded\"\n        }), e.headers),\n        queryParameters: r(r({}, n.queryParameters()), e.queryParameters)\n      }));\n      return p({\n        transporter: a,\n        appId: t,\n        addAlgoliaAgent: function (e, t) {\n          a.userAgent.add({\n            segment: e,\n            version: t\n          });\n        },\n        clearCache: function () {\n          return Promise.all([a.requestsCache.clear(), a.responsesCache.clear()]).then(function () {});\n        }\n      }, e.methods);\n    }(r(r(r({}, o), n), {}, {\n      methods: {\n        search: fe,\n        searchForFacetValues: de,\n        multipleBatch: se,\n        multipleGetObjects: ce,\n        multipleQueries: fe,\n        copyIndex: G,\n        copySettings: V,\n        copySynonyms: _,\n        copyRules: L,\n        moveIndex: ie,\n        listIndices: oe,\n        getLogs: Z,\n        listClusters: ae,\n        multipleSearchForFacetValues: de,\n        getApiKey: Y,\n        addApiKey: W,\n        listApiKeys: ne,\n        updateApiKey: me,\n        deleteApiKey: X,\n        restoreApiKey: pe,\n        assignUserID: B,\n        assignUserIDs: Q,\n        getUserID: ee,\n        searchUserIDs: he,\n        listUserIDs: ue,\n        getTopUserIDs: $,\n        removeUserID: le,\n        hasPendingMappings: te,\n        initIndex: function (e) {\n          return function (t) {\n            return re(e)(t, {\n              methods: {\n                batch: ye,\n                delete: xe,\n                findAnswers: Ne,\n                getObject: Ae,\n                getObjects: Ce,\n                saveObject: Be,\n                saveObjects: Qe,\n                search: Xe,\n                searchForFacetValues: Ye,\n                waitTask: tt,\n                setSettings: et,\n                getSettings: Je,\n                partialUpdateObject: Fe,\n                partialUpdateObjects: He,\n                deleteObject: qe,\n                deleteObjects: De,\n                deleteBy: Ie,\n                clearObjects: Oe,\n                browseObjects: ge,\n                getObjectPosition: Ee,\n                findObject: Re,\n                exists: Te,\n                saveSynonym: Ve,\n                saveSynonyms: _e,\n                getSynonym: ze,\n                searchSynonyms: $e,\n                browseSynonyms: be,\n                deleteSynonym: ke,\n                clearSynonyms: je,\n                replaceAllObjects: Me,\n                replaceAllSynonyms: We,\n                searchRules: Ze,\n                getRule: Ue,\n                deleteRule: Se,\n                saveRule: Ge,\n                saveRules: Le,\n                replaceAllRules: Ke,\n                browseRules: ve,\n                clearRules: we\n              }\n            });\n          };\n        },\n        initAnalytics: function () {\n          return function (e) {\n            return function (e) {\n              var t = e.region || \"us\",\n                  n = c(m.WithinHeaders, e.appId, e.apiKey),\n                  a = k(r(r({\n                hosts: [{\n                  url: \"analytics.\".concat(t, \".algolia.com\")\n                }]\n              }, e), {}, {\n                headers: r(r(r({}, n.headers()), {\n                  \"content-type\": \"application/json\"\n                }), e.headers),\n                queryParameters: r(r({}, n.queryParameters()), e.queryParameters)\n              }));\n              return p({\n                appId: e.appId,\n                transporter: a\n              }, e.methods);\n            }(r(r(r({}, o), e), {}, {\n              methods: {\n                addABTest: C,\n                getABTest: J,\n                getABTests: z,\n                stopABTest: F,\n                deleteABTest: U\n              }\n            }));\n          };\n        },\n        initRecommendation: function () {\n          return function (e) {\n            return function (e) {\n              var t = e.region || \"us\",\n                  n = c(m.WithinHeaders, e.appId, e.apiKey),\n                  a = k(r(r({\n                hosts: [{\n                  url: \"recommendation.\".concat(t, \".algolia.com\")\n                }]\n              }, e), {}, {\n                headers: r(r(r({}, n.headers()), {\n                  \"content-type\": \"application/json\"\n                }), e.headers),\n                queryParameters: r(r({}, n.queryParameters()), e.queryParameters)\n              }));\n              return p({\n                appId: e.appId,\n                transporter: a\n              }, e.methods);\n            }(r(r(r({}, o), e), {}, {\n              methods: {\n                getPersonalizationStrategy: H,\n                setPersonalizationStrategy: M\n              }\n            }));\n          };\n        }\n      }\n    }));\n  }\n\n  return it.version = \"4.8.4\", it;\n});","map":null,"metadata":{},"sourceType":"script"}