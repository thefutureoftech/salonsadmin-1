{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateAdminComponent = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst places_dbservice_1 = require(\"../../services/places.dbservice\");\n\nconst router_1 = require(\"@angular/router\");\n\nconst i0 = (0, tslib_1.__importStar)(require(\"@angular/core\"));\nconst i1 = (0, tslib_1.__importStar)(require(\"../../services/places.dbservice\"));\nconst i2 = (0, tslib_1.__importStar)(require(\"@angular/router\"));\nconst i3 = (0, tslib_1.__importStar)(require(\"@angular/common\"));\nconst i4 = (0, tslib_1.__importStar)(require(\"@mobiscroll/angular\"));\nconst i5 = (0, tslib_1.__importStar)(require(\"@angular/forms\"));\n\nfunction StateAdminComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"mbsc-button\", 3);\n    i0.ɵɵlistener(\"click\", function StateAdminComponent_div_0_Template_mbsc_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.createNewState();\n    });\n    i0.ɵɵtext(2, \"Create New State\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"mbsc-input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function StateAdminComponent_div_0_Template_mbsc_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.selected = $event;\n    })(\"onSet\", function StateAdminComponent_div_0_Template_mbsc_input_onSet_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.stateSelected($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"mbsc-data\", ctx_r0.states)(\"mbsc-options\", ctx_r0.selectOptions)(\"ngModel\", ctx_r0.selected);\n  }\n}\n\nfunction StateAdminComponent_router_outlet_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"router-outlet\");\n  }\n}\n\nfunction StateAdminComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Please make a selection for country first!!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nclass StateAdminComponent {\n  constructor(placesDBService, router, activeRoute) {\n    this.placesDBService = placesDBService;\n    this.router = router;\n    this.activeRoute = activeRoute;\n    this.states = [];\n    this.selectOptions = {\n      theme: 'ios',\n      headerText: 'Select'\n    };\n  }\n\n  ngOnInit() {\n    if (this.placesDBService.getSelectedCountry()) {\n      this.countrySelected = true;\n    } else {\n      this.countrySelected = false;\n      this.placesDBService.setSelectedState(null);\n      return;\n    }\n\n    this.placesDBService.getStatesFromDB(this.setStates.bind(this), this.placesDBService.getSelectedCountry().id);\n\n    if (this.placesDBService.getSelectedState()) {\n      let id = this.placesDBService.getSelectedState().id;\n      this.router.navigate(['edit'], {\n        relativeTo: this.activeRoute,\n        queryParams: {\n          id: id,\n          type: 'State'\n        }\n      });\n    }\n  }\n\n  setStates(states) {\n    this.stateList = states;\n    this.states = [];\n    this.states.push({\n      text: '',\n      value: '0'\n    });\n    this.stateList.forEach(state => {\n      this.states.push({\n        text: state.name,\n        value: state.id\n      });\n    });\n\n    if (this.placesDBService.getSelectedState()) {\n      let selected = this.stateList.find(item => {\n        return this.placesDBService.getSelectedState().id === item.id;\n      });\n\n      if (selected) {\n        this.displaySelected = true;\n        this.selected = selected.id;\n      } else {\n        this.displaySelected = false;\n        this.placesDBService.setSelectedState(null);\n      }\n    }\n\n    ;\n  }\n\n  stateSelected(event) {\n    let selected = this.stateList.find(item => {\n      return item.name === event.valueText;\n    });\n\n    if (!selected) {\n      this.router.navigate(['../states'], {\n        relativeTo: this.activeRoute\n      });\n      this.placesDBService.setSelectedState(null);\n      this.displaySelected = false;\n    } else {\n      this.placesDBService.setSelectedState(selected.id);\n      this.displaySelected = true;\n      this.router.navigate(['edit'], {\n        relativeTo: this.activeRoute,\n        queryParams: {\n          id: selected.id,\n          type: 'State'\n        }\n      });\n    }\n  }\n\n  createNewState() {\n    this.router.navigate(['new'], {\n      relativeTo: this.activeRoute,\n      queryParams: {\n        type: 'State'\n      }\n    });\n    this.displaySelected = true;\n  }\n\n}\n\nexports.StateAdminComponent = StateAdminComponent;\n\nStateAdminComponent.ɵfac = function StateAdminComponent_Factory(t) {\n  return new (t || StateAdminComponent)(i0.ɵɵdirectiveInject(i1.PlacesDBService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nStateAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StateAdminComponent,\n  selectors: [[\"app-state-admin\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[\"class\", \"mbsc-btn-group-block\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mbsc-btn-group-block\"], [3, \"click\"], [\"type\", \"text\", \"name\", \"state\", \"mbsc-select\", \"\", \"placeholder\", \"Select A State\", 3, \"mbsc-data\", \"mbsc-options\", \"ngModel\", \"ngModelChange\", \"onSet\"]],\n  template: function StateAdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, StateAdminComponent_div_0_Template, 5, 3, \"div\", 0);\n      i0.ɵɵtemplate(1, StateAdminComponent_router_outlet_1_Template, 1, 0, \"router-outlet\", 1);\n      i0.ɵɵtemplate(2, StateAdminComponent_p_2_Template, 2, 0, \"p\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.countrySelected);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.displaySelected);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.countrySelected);\n    }\n  },\n  directives: [i3.NgIf, i4.MbscButton, i4.MbscInput, i4.MbscSelect, i5.NgControlStatus, i5.NgModel, i2.RouterOutlet],\n  styles: [\"\"]\n});","map":null,"metadata":{},"sourceType":"script"}