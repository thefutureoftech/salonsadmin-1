{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AffiliateResolver = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst affiliate_service_1 = require(\"../services/affiliate.service\");\n\nconst i0 = (0, tslib_1.__importStar)(require(\"@angular/core\"));\nconst i1 = (0, tslib_1.__importStar)(require(\"../services/affiliate.service\"));\n\nclass AffiliateResolver {\n  constructor(affiliatedService) {\n    this.affiliatedService = affiliatedService;\n  }\n\n  resolve(route) {\n    console.log(route.params.type); //requests or members\n\n    console.log(route.params.id);\n    console.log(route.url[0].path);\n\n    if (route.url[0].path === 'editaffiliate') {\n      let typePromise = new Promise((res, rej) => {\n        res({\n          type: route.params.type\n        });\n      });\n      let dataPromise = this.affiliatedService.getAffiliatesData(route.params.type, route.params.id);\n      return Promise.all([typePromise, dataPromise]);\n    } else {\n      let typePromise = new Promise((res, rej) => {\n        res({\n          type: route.params.type\n        });\n      });\n      let dataPromise = this.affiliatedService.getAffiliatesData(route.params.type);\n      return Promise.all([typePromise, dataPromise]);\n    }\n  }\n\n}\n\nexports.AffiliateResolver = AffiliateResolver;\n\nAffiliateResolver.ɵfac = function AffiliateResolver_Factory(t) {\n  return new (t || AffiliateResolver)(i0.ɵɵinject(i1.AffiliateService));\n};\n\nAffiliateResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AffiliateResolver,\n  factory: AffiliateResolver.ɵfac\n});","map":null,"metadata":{},"sourceType":"script"}