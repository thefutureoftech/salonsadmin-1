{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CrossService = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst store_dbservice_1 = require(\"./store.dbservice\");\n\nconst rxjs_2 = require(\"rxjs\");\n\nconst i0 = (0, tslib_1.__importStar)(require(\"@angular/core\"));\nconst i1 = (0, tslib_1.__importStar)(require(\"./store.dbservice\"));\n\nclass CrossService {\n  constructor(storeDBService) {\n    this.storeDBService = storeDBService;\n    this.formClearanceSubject = new rxjs_1.BehaviorSubject(false);\n    this.dataRecieved = new rxjs_2.Subject();\n    this.serviceData = []; // this.storeDBService.fillServices(this.serviceData,  this.setServiceData.bind(this));\n    // this.serviceData =\n    //     [\n    //         {\n    //             \"label\": \"Hair\",\n    //             \"children\":\n    //                 [\n    //                     {\n    //                         \"label\": \"Hair Trimming\",\n    //                         \"children\":\n    //                             [\n    //                                 { name: \"Shaving\", arabicName: 'يسشيسشي', parent: ' dsds', price: 50, period: 15,  selected: true },\n    //                                 { name: \"Cutting\", arabicName: 'يسشيسشي', parent: ' dsds', price: 10, period: 15,  selected: true }\n    //                             ]\n    //                     },\n    //                     {\n    //                         \"label\": \"Hair Styling\",\n    //                         \"children\":\n    //                             [\n    //                                 { name: \"تمليس\", arabicName: 'يسشيسشي', parent: ' dsds', price: 12, period: 30,  selected: true },\n    //                                 { name: \"Dye\", arabicName: 'يسشيسشي', parent: ' dsds', price: 13, period: 45,  selected: true }\n    //                             ]\n    //                     }\n    //                 ]\n    //         },\n    //         {\n    //             \"label\": \"Hands\",\n    //             \"children\":\n    //                 [\n    //                     {\n    //                         \"label\": \"Hands washing\",\n    //                         \"children\":\n    //                             [\n    //                                 { name: \"Nice washing\", arabicName: 'يسشيسشي', parent: ' dsds', price: 50, period: 30,  selected: true },\n    //                                 { name: \"Deep Washing\", arabicName: 'يسشيسشي', parent: ' dsds', price: 10, period: 45,  selected: true }\n    //                             ]\n    //                     },\n    //                     {\n    //                         \"label\": \"نقش حناء\",\n    //                         \"children\":\n    //                             [\n    //                                 { name: \"نقش سريع\", arabicName: 'يسشيسشي', parent: ' dsds', price: 45, period: 45,  selected: true },\n    //                                 { name: \"نقش عميق\", arabicName: 'يسشيسشي', parent: ' dsds', price: 100, period: 30,  selected: true }\n    //                             ]\n    //                     }\n    //                 ]\n    //         }\n    //     ];\n  }\n\n  retrieveServiceData() {\n    this.serviceData = [];\n    this.storeDBService.fillServices(this.serviceData, this.setServiceData.bind(this));\n  }\n\n  subToFormClearance() {\n    console.log('sending subscription');\n    return this.formClearanceSubject.asObservable();\n  }\n\n  sendFormClearFlag(flag) {\n    console.log('sending clear flag of ' + flag);\n    this.formClearanceSubject.next(flag);\n  }\n\n  setSelectedService(service, index1, index2, index3) {\n    this.selectedService = {\n      service,\n      index1,\n      index2,\n      index3\n    };\n  }\n\n  getSelectedService() {\n    return this.selectedService;\n  }\n\n  setServiceData(data) {\n    this.serviceData = data;\n    this.dataRecieved.next(this.serviceData);\n  }\n\n  sendRecievedData() {\n    this.dataRecieved.next(this.serviceData);\n  }\n\n  getRecievedData() {\n    return this.dataRecieved.asObservable();\n  }\n\n  getServiceData() {\n    return this.serviceData;\n  }\n\n  addService(service, catIndex, subCatIndex) {\n    let index = 0;\n\n    if (this.serviceData[catIndex].children[subCatIndex].children.length) {\n      index = this.serviceData[catIndex].children[subCatIndex].children.length;\n    }\n\n    this.serviceData[catIndex].children[subCatIndex].children[index] = service;\n    return index;\n  }\n\n}\n\nexports.CrossService = CrossService;\n\nCrossService.ɵfac = function CrossService_Factory(t) {\n  return new (t || CrossService)(i0.ɵɵinject(i1.StoreDBService));\n};\n\nCrossService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrossService,\n  factory: CrossService.ɵfac\n});","map":null,"metadata":{},"sourceType":"script"}