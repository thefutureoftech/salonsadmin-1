{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GeneralComponent = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst router_1 = require(\"@angular/router\");\n\nconst i0 = (0, tslib_1.__importStar)(require(\"@angular/core\"));\nconst i1 = (0, tslib_1.__importStar)(require(\"@angular/router\"));\nconst i2 = (0, tslib_1.__importStar)(require(\"@mobiscroll/angular\"));\nconst i3 = (0, tslib_1.__importStar)(require(\"@angular/forms\"));\n\nconst _c0 = function () {\n  return [\"./list/requests\"];\n};\n\nconst _c1 = function () {\n  return [\"./list/members\"];\n};\n\nconst _c2 = function () {\n  return [\"./dashboard\"];\n};\n\nclass GeneralComponent {\n  constructor(router, activeRoute) {\n    this.router = router;\n    this.activeRoute = activeRoute;\n  }\n\n  ngOnInit() {\n    this.currentTab = 'requests';\n    this.formSettings = {\n      theme: 'ios',\n      lang: 'en',\n      inputStyle: 'outline',\n      labelStyle: 'stacked'\n    };\n    this.tabSettings = {\n      theme: 'ios',\n      lang: 'en',\n      display: 'inline'\n    };\n\n    if (this.currentTab == 'requests') {\n      this.router.navigate(['./list/requests'], {\n        relativeTo: this.activeRoute,\n        queryParamsHandling: \"merge\"\n      });\n    }\n  }\n\n  goToTab(tabName) {\n    this.currentTab = tabName;\n  }\n\n}\n\nexports.GeneralComponent = GeneralComponent;\n\nGeneralComponent.ɵfac = function GeneralComponent_Factory(t) {\n  return new (t || GeneralComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n\nGeneralComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GeneralComponent,\n  selectors: [[\"app-general\"]],\n  decls: 13,\n  vars: 11,\n  consts: [[3, \"options\"], [\"novalidate\", \"\"], [\"frm\", \"ngForm\"], [2, \"text-align\", \"center\"], [\"queryParamsHandling\", \"merge\", 3, \"selected\", \"routerLink\", \"click\"]],\n  template: function GeneralComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mbsc-form\", 0)(1, \"form\", 1, 2)(3, \"h3\", 3);\n      i0.ɵɵtext(4, \"Affiliate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mbsc-tab-nav\", 0)(6, \"mbsc-nav-item\", 4);\n      i0.ɵɵlistener(\"click\", function GeneralComponent_Template_mbsc_nav_item_click_6_listener() {\n        return ctx.goToTab(\"general\");\n      });\n      i0.ɵɵtext(7, \" Withdraw Requests \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mbsc-nav-item\", 4);\n      i0.ɵɵlistener(\"click\", function GeneralComponent_Template_mbsc_nav_item_click_8_listener() {\n        return ctx.goToTab(\"services\");\n      });\n      i0.ɵɵtext(9, \" Affiliate Members \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mbsc-nav-item\", 4);\n      i0.ɵɵlistener(\"click\", function GeneralComponent_Template_mbsc_nav_item_click_10_listener() {\n        return ctx.goToTab(\"permissions\");\n      });\n      i0.ɵɵtext(11, \" Dashboard \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"router-outlet\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"options\", ctx.formSettings);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"options\", ctx.tabSettings);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"selected\", ctx.currentTab == \"requests\")(\"routerLink\", i0.ɵɵpureFunction0(8, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"selected\", ctx.currentTab == \"members\")(\"routerLink\", i0.ɵɵpureFunction0(9, _c1));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"selected\", ctx.currentTab == \"dashboard\")(\"routerLink\", i0.ɵɵpureFunction0(10, _c2));\n    }\n  },\n  directives: [i2.MbscForm, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i2.MbscTabNav, i2.MbscNavItem, i1.RouterLink, i1.RouterOutlet],\n  styles: [\"\"]\n});","map":null,"metadata":{},"sourceType":"script"}