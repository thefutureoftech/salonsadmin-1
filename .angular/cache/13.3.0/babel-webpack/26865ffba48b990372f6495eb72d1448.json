{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServiceEditComponent = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst category_dbservice_1 = require(\"../../../services/category.dbservice\");\n\nconst router_1 = require(\"@angular/router\");\n\nconst ngx_image_compress_1 = require(\"ngx-image-compress\");\n\nconst i0 = (0, tslib_1.__importStar)(require(\"@angular/core\"));\nconst i1 = (0, tslib_1.__importStar)(require(\"../../../services/category.dbservice\"));\nconst i2 = (0, tslib_1.__importStar)(require(\"@angular/router\"));\nconst i3 = (0, tslib_1.__importStar)(require(\"ngx-image-compress\"));\nconst i4 = (0, tslib_1.__importStar)(require(\"@mobiscroll/angular\"));\nconst i5 = (0, tslib_1.__importStar)(require(\"@angular/forms\"));\nconst i6 = (0, tslib_1.__importStar)(require(\"@angular/common\"));\n\nfunction ServiceEditComponent_h3_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"New \", ctx_r1.type, \"\");\n  }\n}\n\nfunction ServiceEditComponent_h3_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Edit \", ctx_r2.type, \"\");\n  }\n}\n\nfunction ServiceEditComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"mbsc-input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function ServiceEditComponent_div_5_Template_mbsc_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.category.name = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mbsc-input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function ServiceEditComponent_div_5_Template_mbsc_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.category.arabicName = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mbsc-input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function ServiceEditComponent_div_5_Template_mbsc_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.category.busType = $event;\n    })(\"onSet\", function ServiceEditComponent_div_5_Template_mbsc_input_onSet_3_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.businessTypeSelected($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mbsc-input\", 13);\n    i0.ɵɵlistener(\"change\", function ServiceEditComponent_div_5_Template_mbsc_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onFileChange($event);\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"img\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.category.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.category.arabicName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mbsc-data\", ctx_r3.busTypeData)(\"mbsc-options\", ctx_r3.selectOptions)(\"ngModel\", ctx_r3.category.busType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r3.uploadImageString);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.uploadImageString);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r3.category.imageURL, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ServiceEditComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"mbsc-input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function ServiceEditComponent_div_6_Template_mbsc_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.service.name = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mbsc-input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function ServiceEditComponent_div_6_Template_mbsc_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.service.arabicName = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mbsc-input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function ServiceEditComponent_div_6_Template_mbsc_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.service.busType = $event;\n    })(\"onSet\", function ServiceEditComponent_div_6_Template_mbsc_input_onSet_3_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.businessTypeSelected($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.service.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.service.arabicName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mbsc-data\", ctx_r4.busTypeData)(\"mbsc-options\", ctx_r4.selectOptions)(\"ngModel\", ctx_r4.service.busType);\n  }\n}\n\nclass ServiceEditComponent {\n  constructor(categoryDBService, router, activeRoute, imageCompress) {\n    this.categoryDBService = categoryDBService;\n    this.router = router;\n    this.activeRoute = activeRoute;\n    this.imageCompress = imageCompress;\n    this.editMode = false;\n    this.formSettings = {\n      theme: 'ios'\n    };\n    this.busTypeData = [{\n      text: '',\n      value: '0'\n    }, {\n      text: 'salons',\n      value: 'salons'\n    }];\n    this.uploadImageString = 'Upload Image';\n  }\n\n  ngOnInit() {\n    this.selectOptions = {\n      theme: 'ios'\n    };\n    this.activeRoute.queryParams.subscribe(params => {\n      if (params.id != undefined) {\n        if (params.type === 'Category') {\n          if (!this.categoryDBService.getCategories()) {\n            this.router.navigate(['../../category'], {\n              relativeTo: this.activeRoute\n            });\n            return;\n          }\n\n          this.category = this.categoryDBService.getCategory(params.id);\n          this.type = params.type;\n          this.editMode = true;\n        } // else if (params.type === 'SubCategory') {\n        //   if (!this.categoryDBService.getSubCategories()) {\n        //     this.router.navigate(['../../subcategory'], { relativeTo: this.activeRoute });\n        //     return;\n        //   }\n        //   this.subCategory = this.categoryDBService.getSubCategory(params.id);\n        //   this.type = params.type;\n        //   this.editMode = true;\n        // }\n        else if (params.type === 'Service') {\n          if (!this.categoryDBService.getServices()) {\n            this.router.navigate(['../../service'], {\n              relativeTo: this.activeRoute\n            });\n            return;\n          }\n\n          this.service = this.categoryDBService.getService(params.id);\n          this.type = params.type;\n          this.editMode = true;\n        }\n      } else if (params.type.length > 0) {\n        this.type = params.type;\n        this.editMode = false;\n      } else {\n        this.type = '';\n        this.editMode = false;\n      }\n\n      if (this.editMode) {\n        this.childrenExist();\n      } else {\n        if (this.type === 'Category') {\n          this.category = {\n            name: '',\n            arabicName: '',\n            busType: '',\n            imageURL: ''\n          };\n        } // else if (this.type === 'SubCategory') {\n        //   this.subCategory = {\n        //     name: '',\n        //     arabicName: '',\n        //     parent: this.categoryDBService.getSelectedCategory().id\n        //   };\n        // }\n        else if (this.type === 'Service') {\n          this.service = {\n            name: '',\n            arabicName: '',\n            parent: this.categoryDBService.getSelectedCategory().id\n          };\n        }\n\n        this.cancelDelete = 'Cancel';\n      }\n    });\n  }\n\n  childrenExist() {\n    if (this.type === 'Category') {\n      this.categoryDBService.canDeleteCategory(this.category.id).subscribe(subcategories => {\n        if (subcategories.length > 0) {\n          this.cancelDelete = 'Cancel';\n        } else {\n          this.cancelDelete = 'Delete';\n        }\n      });\n    } // else if (this.type === 'SubCategory') {\n    //   this.categoryDBService.canDeleteSubCategory(this.subCategory.id)\n    //     .subscribe(services => {\n    //       if (services.length > 0) {\n    //         this.cancelDelete = 'Cancel';\n    //       }\n    //       else {\n    //         this.cancelDelete = 'Delete';\n    //       }\n    //     });\n    // }\n    else if (this.type === 'Service') {\n      let can = this.categoryDBService.canDeleteService(this.service.id);\n\n      if (can) {\n        this.cancelDelete = 'Delete';\n      }\n    }\n  }\n\n  businessTypeSelected(event) {\n    if (!event.valueText) {\n      this.formInvalid = true;\n    } else {\n      this.formInvalid = false;\n    }\n  }\n\n  proceed(form) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      // if(!this.category.name.trim() || !this.category.arabicName.trim()){\n      //   return;  //Check for empty input fields\n      // }\n      if (this.type === 'Category') {\n        if (this.editMode) {\n          yield this.categoryDBService.saveCategory(this.category.id, this.category);\n        } else {\n          yield this.categoryDBService.createCategory(this.category);\n        }\n\n        this.categoryDBService.setSelectedCategory(null);\n        this.router.navigate(['../../category'], {\n          relativeTo: this.activeRoute\n        });\n      } // else if (this.type === 'SubCategory') {\n      //   if (this.editMode) {\n      //     this.categoryDBService.saveSubCategory(this.subCategory.id, this.subCategory);\n      //   }\n      //   else {\n      //     this.categoryDBService.createSubCategory(this.subCategory);\n      //   }\n      //   this.categoryDBService.setSelectedSubCategory(null);\n      //   this.router.navigate(['../../subcategory'], { relativeTo: this.activeRoute });\n      // }\n      else if (this.type === 'Service') {\n        if (this.editMode) {\n          this.categoryDBService.saveService(this.service.id, this.service);\n        } else {\n          this.categoryDBService.createService(this.service);\n        }\n\n        this.categoryDBService.setSelectedService(null);\n        this.router.navigate(['../../service'], {\n          relativeTo: this.activeRoute\n        });\n      }\n    });\n  }\n\n  cancelOrDelete() {\n    if (this.type === 'Category') {\n      if (this.cancelDelete === 'Cancel') {\n        this.router.navigate(['../../category'], {\n          relativeTo: this.activeRoute\n        });\n      } else if (this.cancelDelete === 'Delete') {\n        this.categoryDBService.deleteCategory(this.category.id);\n        this.router.navigate(['../../category'], {\n          relativeTo: this.activeRoute\n        });\n      }\n\n      this.categoryDBService.setSelectedCategory(null);\n    } // else if (this.type === 'SubCategory') {\n    //   if (this.cancelDelete === 'Cancel') {\n    //     this.router.navigate(['../../subcategory'], { relativeTo: this.activeRoute });\n    //   }\n    //   else if (this.cancelDelete === 'Delete') {\n    //     this.categoryDBService.deleteSubCategory(this.subCategory.id);\n    //     this.router.navigate(['../../subcategory'], { relativeTo: this.activeRoute });\n    //   }\n    //   this.categoryDBService.setSelectedSubCategory(null);\n    // }\n    else if (this.type === 'Service') {\n      if (this.cancelDelete === 'Cancel') {\n        this.router.navigate(['../../service'], {\n          relativeTo: this.activeRoute\n        });\n      } else if (this.cancelDelete === 'Delete') {\n        this.categoryDBService.deleteService(this.service.id);\n        this.router.navigate(['../../service'], {\n          relativeTo: this.activeRoute\n        });\n      }\n\n      this.categoryDBService.setSelectedService(null);\n    }\n  }\n\n  onFileChange(event) {\n    let reader = new FileReader();\n\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n\n      reader.onload = () => (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n        let result2 = yield this.imageCompress.compressFile(reader.result, this.imageCompress.DOC_ORIENTATION.Up, 50, 50);\n        this.category.imageURL = result2;\n      });\n    }\n  }\n\n}\n\nexports.ServiceEditComponent = ServiceEditComponent;\n\nServiceEditComponent.ɵfac = function ServiceEditComponent_Factory(t) {\n  return new (t || ServiceEditComponent)(i0.ɵɵdirectiveInject(i1.CategoryDBService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.NgxImageCompressService));\n};\n\nServiceEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServiceEditComponent,\n  selectors: [[\"app-service-edit\"]],\n  decls: 13,\n  vars: 7,\n  consts: [[1, \"md-create-account\", 3, \"options\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"frm\", \"ngForm\"], [\"style\", \"text-align: center\", 4, \"ngIf\"], [\"class\", \"md-cac-cont\", 4, \"ngIf\"], [1, \"mbsc-btn-group-justified\"], [\"type\", \"submit\", 2, \"display\", \"block\", 3, \"disabled\"], [\"type\", \"button\", 3, \"click\"], [2, \"text-align\", \"center\"], [1, \"md-cac-cont\"], [\"id\", \"name\", \"name\", \"name\", \"type\", \"text\", \"placeholder\", \"Name\", \"required\", \"\", \"minlength\", \"1\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"arabicName\", \"name\", \"arabicName\", \"type\", \"text\", \"placeholder\", \"Arabic Name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"busType\", \"mbsc-select\", \"\", \"required\", \"\", \"placeholder\", \"Select Business Type\", \"ngModel\", \"\", 3, \"mbsc-data\", \"mbsc-options\", \"ngModel\", \"ngModelChange\", \"onSet\"], [\"type\", \"file\", \"name\", \"image\", \"accept\", \"image/png, image/x-icon, image/bmp, image/jpeg\", 3, \"placeholder\", \"change\"], [\"alt\", \"\", \"width\", \"100\", \"height\", \"100\", 3, \"src\"], [\"id\", \"name\", \"name\", \"name\", \"type\", \"text\", \"placeholder\", \"Name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function ServiceEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r16 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"mbsc-form\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ServiceEditComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r16);\n\n        const _r0 = i0.ɵɵreference(2);\n\n        return ctx.proceed(_r0);\n      });\n      i0.ɵɵtemplate(3, ServiceEditComponent_h3_3_Template, 2, 1, \"h3\", 3);\n      i0.ɵɵtemplate(4, ServiceEditComponent_h3_4_Template, 2, 1, \"h3\", 3);\n      i0.ɵɵtemplate(5, ServiceEditComponent_div_5_Template, 7, 8, \"div\", 4);\n      i0.ɵɵtemplate(6, ServiceEditComponent_div_6_Template, 4, 5, \"div\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ServiceEditComponent_Template_button_click_11_listener() {\n        return ctx.cancelOrDelete();\n      });\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"options\", ctx.formSettings);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editMode);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.type === \"Category\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.type === \"Service\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid || ctx.formInvalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.cancelDelete);\n    }\n  },\n  directives: [i4.MbscForm, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.NgIf, i4.MbscInput, i5.RequiredValidator, i5.MinLengthValidator, i5.NgControlStatus, i5.NgModel, i4.MbscSelect],\n  styles: [\"\"]\n});","map":null,"metadata":{},"sourceType":"script"}