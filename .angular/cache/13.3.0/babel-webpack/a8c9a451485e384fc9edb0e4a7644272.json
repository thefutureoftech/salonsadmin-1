{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CategoryAdminComponent = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst category_dbservice_1 = require(\"../../../services/category.dbservice\");\n\nconst router_1 = require(\"@angular/router\");\n\nconst i0 = (0, tslib_1.__importStar)(require(\"@angular/core\"));\nconst i1 = (0, tslib_1.__importStar)(require(\"../../../services/category.dbservice\"));\nconst i2 = (0, tslib_1.__importStar)(require(\"@angular/router\"));\nconst i3 = (0, tslib_1.__importStar)(require(\"@mobiscroll/angular\"));\nconst i4 = (0, tslib_1.__importStar)(require(\"@angular/forms\"));\n\nclass CategoryAdminComponent {\n  constructor(categoryDBService, router, activeRoute) {\n    this.categoryDBService = categoryDBService;\n    this.router = router;\n    this.activeRoute = activeRoute;\n    this.categories = [];\n    this.formSettings = {\n      theme: 'ios'\n    };\n    this.selectOptions = {\n      theme: 'ios',\n      headerText: 'Select'\n    };\n  }\n\n  ngOnInit() {\n    this.categoryDBService.getCategoriesFromDB('salons', this.setCategories.bind(this));\n\n    if (this.categoryDBService.getSelectedCategory()) {\n      let id = this.categoryDBService.getSelectedCategory().id;\n      this.router.navigate(['edit'], {\n        relativeTo: this.activeRoute,\n        queryParams: {\n          id: id,\n          type: 'Category'\n        }\n      });\n    }\n  }\n\n  setCategories(categories) {\n    this.categoryList = categories;\n\n    for (let entry in this.categories) {\n      this.categories.pop();\n    }\n\n    this.categories.push({\n      text: '',\n      value: '0'\n    });\n    this.categoryList.forEach(category => {\n      this.categories.push({\n        text: category.name,\n        value: category.id\n      });\n\n      if (this.categoryDBService.getSelectedCategory()) {\n        if (this.categoryDBService.getSelectedCategory().id === category.id) {\n          this.selected = category.id;\n        }\n      }\n    });\n  }\n\n  categorySelected(event) {\n    let selected = this.categoryList.find(item => {\n      return item.name === event.valueText;\n    });\n\n    if (!selected) {\n      this.router.navigate(['../categories'], {\n        relativeTo: this.activeRoute\n      });\n      this.categoryDBService.setSelectedCategory(null);\n    } else {\n      this.categoryDBService.setSelectedCategory(selected.id);\n      this.router.navigate(['edit'], {\n        relativeTo: this.activeRoute,\n        queryParams: {\n          id: selected.id,\n          type: 'Category'\n        }\n      });\n    }\n  }\n\n  createNewCategory() {\n    this.router.navigate(['new'], {\n      relativeTo: this.activeRoute,\n      queryParams: {\n        type: 'Category'\n      }\n    });\n  }\n\n}\n\nexports.CategoryAdminComponent = CategoryAdminComponent;\n\nCategoryAdminComponent.ɵfac = function CategoryAdminComponent_Factory(t) {\n  return new (t || CategoryAdminComponent)(i0.ɵɵdirectiveInject(i1.CategoryDBService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nCategoryAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CategoryAdminComponent,\n  selectors: [[\"app-category-admin\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"mbsc-btn-group-block\"], [3, \"click\"], [\"type\", \"text\", \"name\", \"category\", \"mbsc-select\", \"\", \"placeholder\", \"Select A Category\", 3, \"mbsc-data\", \"mbsc-options\", \"ngModel\", \"ngModelChange\", \"onSet\"]],\n  template: function CategoryAdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mbsc-button\", 1);\n      i0.ɵɵlistener(\"click\", function CategoryAdminComponent_Template_mbsc_button_click_1_listener() {\n        return ctx.createNewCategory();\n      });\n      i0.ɵɵtext(2, \"Create New Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementStart(4, \"mbsc-input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function CategoryAdminComponent_Template_mbsc_input_ngModelChange_4_listener($event) {\n        return ctx.selected = $event;\n      })(\"onSet\", function CategoryAdminComponent_Template_mbsc_input_onSet_4_listener($event) {\n        return ctx.categorySelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"router-outlet\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"mbsc-data\", ctx.categories)(\"mbsc-options\", ctx.selectOptions)(\"ngModel\", ctx.selected);\n    }\n  },\n  directives: [i3.MbscButton, i3.MbscInput, i3.MbscSelect, i4.NgControlStatus, i4.NgModel, i2.RouterOutlet],\n  styles: [\"\"]\n});","map":null,"metadata":{},"sourceType":"script"}