{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserListComponent = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst angular_1 = require(\"@mobiscroll/angular\");\n\nconst router_1 = require(\"@angular/router\");\n\nconst user_service_1 = require(\"../../services/user.service\");\n\nconst user_dbservice_1 = require(\"../../services/user.dbservice\");\n\nrequire(\"rxjs/add/operator/take\");\n\nconst i0 = (0, tslib_1.__importStar)(require(\"@angular/core\"));\nconst i1 = (0, tslib_1.__importStar)(require(\"@angular/router\"));\nconst i2 = (0, tslib_1.__importStar)(require(\"../../services/user.service\"));\nconst i3 = (0, tslib_1.__importStar)(require(\"../../services/user.dbservice\"));\nconst i4 = (0, tslib_1.__importStar)(require(\"@angular/common\"));\nconst i5 = (0, tslib_1.__importStar)(require(\"@mobiscroll/angular\"));\nconst i6 = (0, tslib_1.__importStar)(require(\"@angular/forms\"));\n\nfunction UserListComponent_mbsc_form_0_mbsc_listview_item_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mbsc-listview-item\")(1, \"div\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.name);\n  }\n}\n\nfunction UserListComponent_mbsc_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mbsc-form\", 2)(1, \"form\")(2, \"h3\", 3);\n    i0.ɵɵtext(3, \"Staff\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"div\")(6, \"div\", 4)(7, \"mbsc-hamburger-nav\", 5);\n    i0.ɵɵlistener(\"onItemTap\", function UserListComponent_mbsc_form_0_Template_mbsc_hamburger_nav_onItemTap_7_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.navItemTapped($event);\n    });\n    i0.ɵɵelementStart(8, \"mbsc-nav-item\", 6);\n    i0.ɵɵtext(9, \" Add Employee \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"mbsc-listview\", 2);\n    i0.ɵɵtemplate(11, UserListComponent_mbsc_form_0_mbsc_listview_item_11_Template, 3, 1, \"mbsc-listview-item\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 8);\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵelementStart(14, \"mbsc-button\", 9);\n    i0.ɵɵlistener(\"click\", function UserListComponent_mbsc_form_0_Template_mbsc_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.goBack();\n    });\n    i0.ɵɵtext(15, \"Previous\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"mbsc-button\", 9);\n    i0.ɵɵlistener(\"click\", function UserListComponent_mbsc_form_0_Template_mbsc_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.showConfirm();\n    });\n    i0.ɵɵtext(17, \"Next\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"options\", ctx_r0.formSettings);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"options\", ctx_r0.listviewSettings);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.data);\n  }\n}\n\nfunction UserListComponent_router_outlet_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"router-outlet\");\n  }\n}\n\nclass UserListComponent {\n  constructor(router, activeRoute, userService, userDBService) {\n    this.router = router;\n    this.activeRoute = activeRoute;\n    this.userService = userService;\n    this.userDBService = userDBService;\n    this.formSettings = {\n      theme: 'ios'\n    };\n    this.activateTab = false;\n    this.listviewSettings = {\n      theme: 'ios',\n      sortable: true,\n      iconSlide: true,\n      striped: true,\n      stages: [{\n        percent: -50,\n        color: 'red',\n        icon: 'remove',\n        text: 'Delete',\n        confirm: true,\n        action: (event, inst) => {\n          this.data.splice(event.index, 1);\n          this.userService.setStaff(this.data);\n          return false;\n        }\n      }, {\n        percent: 50,\n        color: 'green',\n        icon: 'line-user',\n        text: 'Edit',\n        confirm: true,\n        action: (event, inst) => {\n          this.activateTab = true;\n          this.router.navigate(['employee'], {\n            relativeTo: this.activeRoute,\n            queryParams: {\n              index: event.index,\n              storeId: this.storeId\n            }\n          });\n        }\n      }]\n    };\n  }\n\n  ngOnInit() {\n    this.storeId = this.activeRoute.snapshot.queryParams.storeId;\n    this.data = this.userService.getStaff();\n    this.activeRoute.queryParams.subscribe(params => {\n      if (params.close) {\n        this.data = this.userService.getStaff();\n        this.closeDetails();\n      }\n    });\n  }\n\n  navItemTapped(event) {\n    this.activateTab = true;\n    this.router.navigate(['employee'], {\n      relativeTo: this.activeRoute,\n      queryParams: {\n        index: -1,\n        storeId: this.storeId\n      }\n    });\n  }\n\n  closeDetails() {\n    this.activateTab = false;\n  }\n\n  showConfirm() {\n    angular_1.mobiscroll.confirm({\n      title: 'Create Store?',\n      message: 'You are about to perform a new store setup operation!!',\n      okText: 'Yes',\n      cancelText: 'No',\n      callback: res => {\n        if (res) {\n          this.proceed();\n        }\n      }\n    });\n  }\n\n  goBack() {\n    this.router.navigate(['../hours'], {\n      relativeTo: this.activeRoute,\n      queryParams: {\n        storeId: this.storeId\n      }\n    });\n  }\n\n  proceed() {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      let stopProcessing = false; //we added this check to prevent adding existing staff to a new store with a new sponsor\n\n      for (let user of this.data) {\n        let result = yield this.userDBService.checkEmailExist(user, this.storeId);\n\n        if (result) {\n          angular_1.mobiscroll.alert({\n            title: 'Email Exists',\n            message: 'Email ' + user.email + ' already exist as a staff (new store) or belong to another sponsor (new branch)'\n          });\n          stopProcessing = true;\n          break;\n        }\n      }\n\n      if (!stopProcessing) {\n        this.router.navigate(['../final'], {\n          relativeTo: this.activeRoute,\n          queryParams: {\n            storeId: this.storeId\n          }\n        });\n      }\n    });\n  }\n\n}\n\nexports.UserListComponent = UserListComponent;\n\nUserListComponent.ɵfac = function UserListComponent_Factory(t) {\n  return new (t || UserListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.UserDBService));\n};\n\nUserListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserListComponent,\n  selectors: [[\"app-user-list\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"options\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"options\"], [2, \"text-align\", \"center\"], [1, \"md-hamb\", 2, \"text-align\", \"center\"], [3, \"onItemTap\"], [\"id\", \"addEmployee\", \"data-icon\", \"plus\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mbsc-btn-group-justified\"], [\"type\", \"button\", \"color\", \"dark\", 3, \"click\"], [1, \"md-wo-status\"]],\n  template: function UserListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UserListComponent_mbsc_form_0_Template, 18, 3, \"mbsc-form\", 0);\n      i0.ɵɵtemplate(1, UserListComponent_router_outlet_1_Template, 1, 0, \"router-outlet\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.activateTab);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.activateTab);\n    }\n  },\n  directives: [i4.NgIf, i5.MbscForm, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i5.MbscHamburgerNav, i5.MbscNavItem, i5.MbscListview, i4.NgForOf, i5.MbscListviewItem, i5.MbscButton, i1.RouterOutlet],\n  styles: [\".mat-button.mat-fab.mat-fab-bottom-right[_ngcontent-%COMP%]{top:auto;right:20px;bottom:20px;left:auto;position:fixed}\"]\n});","map":null,"metadata":{},"sourceType":"script"}